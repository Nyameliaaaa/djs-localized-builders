{"id":0,"name":"djs-localized-builders","kind":1,"kindString":"Project","flags":{},"originalName":"","children":[],"groups":[{"title":"Interfaces","children":[28,23,19],"categories":[{"title":"Config","children":[28,23,19]}]},{"title":"Functions","children":[14,4,9,6,1],"categories":[{"title":"Config","children":[1]},{"title":"Other","children":[14,4,9,6]}]}],"sources":[{"fileName":"index.ts","fullFileName":"/home/runner/work/djs-localized-builders/djs-localized-builders/src/index.ts","line":1,"character":0,"url":"https://github.com/night-lake/djs-localized-builders/blob/5d168eb/src/index.ts#L1"}],"is":{"declaration":false},"location":{"query":"index","hash":""},"text":{"readme":"\n<a href=\"#djs-localized-builders\" id=\"djs-localized-builders\" style=\"color: inherit; text-decoration: none;\">\n  <h1>djs-localized-builders</h1>\n</a>\n<p>A set of builders for <a href=\"https://discord.js.org\">discord.js</a>, built to allow easy localization.</p>\n\n<a href=\"#get-started\" id=\"get-started\" style=\"color: inherit; text-decoration: none;\">\n  <h2>Get Started</h2>\n</a>\n<p>Install <code>djs-localized-builders</code> using your favorite package manager and then add the following to your main file (where you create/extend the client)</p>\n<pre><code class=\"language-ts\"><span class=\"pl-c\">// initalize i18n here</span>\n\n<span class=\"pl-en\">setConfig</span>({\n    <span class=\"pl-en\">getLocalizedString</span>: ({ <span class=\"pl-v\">namespace</span>, <span class=\"pl-v\">string</span>, <span class=\"pl-v\">lang</span>, <span class=\"pl-v\">options</span> }) <span class=\"pl-k\">=></span> {\n        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">i18nLib</span>.<span class=\"pl-en\">getString</span>({ <span class=\"pl-smi\">namespace</span>, <span class=\"pl-smi\">string</span>, <span class=\"pl-smi\">lang</span>, <span class=\"pl-smi\">options</span> }) <span class=\"pl-k\">??</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>fetch_fail<span class=\"pl-pds\">'</span></span>;\n    },\n    caseFormat: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>lowercase<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c\">// can be lowercase, uppercase or keep.</span>\n    seperatorChar: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>.<span class=\"pl-pds\">'</span></span>,\n    validators: <span class=\"pl-smi\">proccess</span>.<span class=\"pl-c1\">ENV</span>.<span class=\"pl-c1\">NODE_ENV</span> <span class=\"pl-k\">===</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>production<span class=\"pl-pds\">'</span></span>,\n    langs: <span class=\"pl-smi\">i18nLib</span>.<span class=\"pl-smi\">langs</span>, <span class=\"pl-c\">// using discord lang codes is required.</span>\n    namespaces: {\n        components: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>responses<span class=\"pl-pds\">'</span></span>,\n        commands: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>commands<span class=\"pl-pds\">'</span></span>,\n        embeds: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>responses<span class=\"pl-pds\">'</span></span>\n    }\n});\n\n<span class=\"pl-c\">// load commands here</span>\n</code></pre>\n<blockquote>\n<p><strong>Warning</strong>\nYou MUST set the configuration for the library AFTER your i18n library is initialized but BEFORE your commands are loaded in order to ensure the builders can properly recieve strings.</p>\n</blockquote>\n<blockquote>\n<p><strong>Info</strong>\nYou can view the examples <a href=\"./examples\">here</a>.</p>\n</blockquote>\n"}}
